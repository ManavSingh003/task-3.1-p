#!/usr/bin/env python3

import rospy
from geometry_msgs.msg import Twist
import time

def init_node():
    rospy.init_node('turtlesim_square_node', anonymous=True)
    rospy.loginfo("Turtles are great at drawing squares!")

def move_forward(velocity_publisher, rate, duration):
    cmd_vel_msg = Twist()
    cmd_vel_msg.linear.x = 2.0
    for _ in range(duration):
        velocity_publisher.publish(cmd_vel_msg)
        rate.sleep()

def rotate(velocity_publisher, rate, angular_speed, duration):
    cmd_vel_msg = Twist()
    cmd_vel_msg.angular.z = angular_speed
    for _ in range(duration):
        velocity_publisher.publish(cmd_vel_msg)
        rate.sleep()

def move_turtle_square():
    init_node()

    # Init publisher
    velocity_publisher = rospy.Publisher('/turtle1/cmd_vel', Twist, queue_size=10)
    rate = rospy.Rate(20)  # 20 Hz

    forward_duration = 40  # 2 seconds at 20 Hz
    rotate_duration = 20    # 1 second at 20 Hz

    for _ in range(4):  # Draw a square
        move_forward(velocity_publisher, rate, forward_duration)
        rotate(velocity_publisher, rate, 1.57, rotate_duration)  # 1.57 rad/s for 90 degrees

if _name_ == '_main_':
    try:
        move_turtle_square()
    except rospy.ROSInterruptException:
        pass
